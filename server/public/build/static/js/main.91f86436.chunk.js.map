{"version":3,"sources":["assets/poster_default.jpeg","services/CommonTypes.ts","pages/Home.tsx","components/MovieTable.tsx","store/actions/movieAction.ts","pages/movie/MovieList.tsx","components/uploadPoster.tsx","components/MovieForm.tsx","store/actions/movieAreaAction.ts","store/actions/movieTypeAction.ts","services/MovieService.ts","pages/movie/AddMovie.tsx","services/MovieTypeService.ts","components/Tag.tsx","pages/movie/Type.tsx","services/MovieAreaService.ts","pages/movie/Area.tsx","pages/movie/EditMovie.tsx","components/UserForm.tsx","services/UserService.ts","pages/user/AddUser.tsx","components/UserTable.tsx","store/actions/userAction.ts","pages/user/UserList.tsx","pages/user/EditUser.tsx","pages/Layout.tsx","pages/Login.tsx","store/actions/admin.ts","components/PrivateRoute.tsx","router.tsx","store/reducers/movieReducer.ts","store/reducers/movieTypeReducer.ts","store/reducers/movieAreaReducer.ts","store/reducers/userReducer.ts","store/reducers/adminReducer.ts","store/reducers/reducers.ts","store/saga/movie.ts","store/saga/type.ts","store/saga/area.ts","store/saga/user.ts","store/saga/index.ts","store/index.ts","App.tsx","index.tsx"],"names":["module","exports","SwitchType","Home","Component","MovieTable","pageConfig","props","total","current","searchConditons","page","pageSize","limit","handleChange","pagination","console","log","onChangePage","handleReset","onKeyChange","onSearch","filterHelper","p","style","padding","value","key","onChange","e","target","onPressEnter","width","marginBottom","display","type","icon","size","marginRight","onClick","this","onLoad","title","render","text","poster","className","alt","src","posterDefault","dataIndex","filterDropdown","filterIcon","area","join","types","timelong","checked","isHot","onSwitchChange","_id","isComing","isClassic","href","onConfirm","onDeleteMovie","okText","cancelText","loading","isLoading","rowKey","dataSource","data","columns","getColums","setLoadingAction","payload","setConditionAction","condition","connect","state","movie","dispatch","val","id","newVal","changeSwitchAction","deleteMovieAction","uploadPoster","beforeUpload","file","isJpgOrPng","message","error","isLt2M","setState","info","status","response","err","uploadButton","name","listType","showUploadList","action","formItemLayout","labelCol","xs","span","sm","wrapperCol","MovieForm","isModal","handleSubmit","preventDefault","form","validateFields","a","formData","getFieldsValue","onSubmit","res","Modal","confirm","onOk","history","push","filter","i","isShow","map","it","obj","label","allAreas","handleGetAreas","allTypes","handleGetTypes","getFieldDecorator","Item","rules","required","Group","options","min","step","valuePropName","initialValue","TextArea","offset","htmlType","withRouter","Form","create","mapPropsToFields","createFormField","fieldsHelper","MovieService","axios","post","put","delete","get","params","AddMovie","add","MovieTypeService","CheckableTag","Tag","MyTag","children","Type","visible","confirmLoading","ModalText","hideModal","handleAdd","find","addType","warn","success","tags","onCancel","placeholder","changeMovieTypeAction","MovieAreaService","Area","addArea","changeMovieAreaAction","EditMovie","undefined","findById","match","edit","tailFormItemLayout","UserForm","values","user","max","hasFeedback","Password","pattern","hasOwnProperty","getFields","UserService","AddUser","UserTable","getColumns","onDeleteUser","onload","onPageChange","setUserIsLoadingAction","deleteUserAction","setSearchUserConditionAction","EditUser","SubMenu","Menu","Header","Layout","Sider","Content","_Layout","to","localStorage","getItem","JSON","parse","username","defaultOpenKeys","location","pathname","mode","theme","path","exact","component","MovieList","UserList","Login","admin","password","onLogin","setItem","stringify","prefix","color","setLoginAdminAction","PrivateRoute","rest","router","defaultState","totalPage","setMovie","newState","Math","ceil","setLoading","setCondition","deleteMovie","m","changeSwitch","d","_movie","newData","setMovieType","deleteMovieType","changeMovieType","_types","newDatas","editMovieType","setMovieArea","deleteMovieArea","changeMovieArea","_area","editMovieArea","setUser","setIsLoading","deleteUser","loginAdmin","reducers","combineReducers","asyncFetchMovie","asyncDeleteMovie","asyncEditSwitch","select","call","findByCondition","movies","asyncFetchType","asyncDeleteType","asyncChangeType","actions","asyncFetchArea","asyncDeleteArea","asyncChangeArea","asyncFetchUser","asyncDeleteUser","users","mySaga","takeEvery","sagaMiddleWare","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.91f86436.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/poster_default.a9fa2152.jpeg\";","export interface IResponseError {\r\n    err: string\r\n    data: null\r\n}\r\n\r\nexport interface IResponseData<T> {\r\n    err: \"\"\r\n    data: T\r\n\r\n}\r\n\r\nexport interface IResponsePageData<T> {\r\n    err: \"\"\r\n    data: T[]\r\n    total: string\r\n}\r\n\r\nexport enum SwitchType {\r\n    isHot = 'isHot',\r\n    isClassic = 'isClassic',\r\n    isComing = 'isComing',\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                欢迎来到电影管理系统\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table, Switch, Button, Popconfirm, Icon, Input } from 'antd';\r\nimport { IMovieState } from '../store/reducers/movieReducer';\r\nimport { ColumnProps, PaginationConfig } from 'antd/lib/table';\r\nimport { IMovie } from '../services/MovieService';\r\nimport { SwitchType } from '../services/CommonTypes';\r\nimport posterDefault from '../assets/poster_default.jpeg'\r\n\r\ninterface IMovieFunc {\r\n    onLoad: () => void,\r\n    onSwitchChange: (type: SwitchType, val: boolean, id: string) => void,\r\n    onDeleteMovie: (id: string) => void,\r\n    onChangePage: (page: number) => void,\r\n    onKeyChange: (key: string) => void,\r\n    onSearch: () => void\r\n\r\n}\r\nexport default class MovieTable extends Component<IMovieState & IMovieFunc> {\r\n    componentDidMount() {\r\n\r\n        if (this.props.onLoad) {\r\n            this.props.onLoad()\r\n        }\r\n    }\r\n\r\n    private pageConfig = (): false | PaginationConfig => {\r\n\r\n        if (this.props.total === 0) {\r\n            return false\r\n        }\r\n        return {\r\n            current: this.props.searchConditons.page,\r\n            pageSize: this.props.searchConditons.limit,\r\n            total: this.props.total\r\n\r\n        }\r\n    }\r\n\r\n    private handleChange = (pagination: PaginationConfig) => {\r\n        console.log(pagination)\r\n        this.props.onChangePage(pagination.current!)\r\n\r\n    }\r\n\r\n    private handleReset = () => {\r\n        this.props.onKeyChange(\"\")\r\n        this.props.onSearch()\r\n    }\r\n    private filterHelper = (p: object) => {\r\n        return (<div style={{ padding: 8 }}>\r\n            <Input\r\n                value={this.props.searchConditons.key}\r\n                onChange={(e) => {\r\n                    this.props.onKeyChange(e.target.value)\r\n                }}\r\n                onPressEnter={this.props.onSearch}\r\n\r\n                style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n                type=\"primary\"\r\n                icon=\"search\"\r\n                size=\"small\"\r\n                style={{ width: 90, marginRight: 8 }}\r\n                onClick={this.props.onSearch}\r\n            >\r\n                搜索\r\n            </Button>\r\n            <Button onClick={this.handleReset} size=\"small\" style={{ width: 90 }}>\r\n                重置\r\n            </Button>\r\n        </div>)\r\n    }\r\n\r\n\r\n    private getColums(): ColumnProps<IMovie>[] {\r\n        return [\r\n            {\r\n                title: \"封面\", key: 'poster', render: (text) => {\r\n                    if (!text.poster) {\r\n                        return <img className=\"posterImg\" alt=\"\" src={posterDefault} />\r\n                    } else {\r\n                        return <img className=\"posterImg\" alt=\"\" src={text.poster} />\r\n                    }\r\n\r\n                }\r\n            },\r\n            {\r\n                title: \"名称\", dataIndex: \"name\", key: 'name',\r\n                filterDropdown: this.filterHelper,\r\n                filterIcon: <Icon type=\"search\" />\r\n            },\r\n            {\r\n                title: \"地区\", key: 'area',\r\n                render: (text) => {\r\n                    return text.area.join(\", \")\r\n                }\r\n            },\r\n            {\r\n                title: \"类型\", key: 'types',\r\n                render: (text) => {\r\n                    return text.types.join(\", \")\r\n                }\r\n            },\r\n            {\r\n                title: \"时长\", key: 'timelong',\r\n                render: (text) => {\r\n                    return `${text.timelong}分钟`\r\n                }\r\n\r\n            },\r\n            {\r\n                title: \"是否热映\", key: 'isHot',\r\n                render: (text) => {\r\n                    return <Switch checked={text.isHot} onChange={(checked) => {\r\n                        this.props.onSwitchChange(SwitchType.isHot, checked, text._id)\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"是否正在上映\", key: 'isComing',\r\n                render: (text) => {\r\n                    return <Switch checked={text.isComing} onChange={(checked) => {\r\n                        this.props.onSwitchChange(SwitchType.isComing, checked, text._id)\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: \"是否经典\", key: 'isClassic',\r\n                render: (text) => {\r\n                    // console.log(text)\r\n                    return <Switch checked={text.isClassic} onChange={(checked) => {\r\n                        this.props.onSwitchChange(SwitchType.isClassic, checked, text._id)\r\n                    }} />\r\n                }\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: '_id',\r\n                render: (text) => (\r\n                    <div>\r\n                        <Button type=\"primary\" size='small' href={`movie/edit/${text._id}`}>编辑</Button>&nbsp;\r\n                        <Popconfirm\r\n                            title=\"确定要删除吗?\"\r\n                            onConfirm={(e) => {\r\n                                if (e) {\r\n                                    this.props.onDeleteMovie(text._id)\r\n                                }\r\n                            }}\r\n\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                        >\r\n                            <Button type=\"danger\" size='small'\r\n                            >删除</Button> </Popconfirm>\r\n\r\n                    </div>\r\n\r\n                ),\r\n            },\r\n        ]\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Table\r\n                    loading={this.props.isLoading}\r\n                    rowKey=\"_id\"\r\n                    dataSource={this.props.data}\r\n                    columns={this.getColums()}\r\n                    pagination={\r\n                        this.pageConfig()\r\n                    }\r\n                    onChange={\r\n                        this.handleChange\r\n                    }\r\n\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport { ISearchCondition } from '../reducers/movieReducer'\r\nimport { IMovie } from '../../services/MovieService'\r\nimport { SwitchType } from '../../services/CommonTypes'\r\n\r\nexport interface setMovieAction {\r\n    type: \"set_movie\",\r\n    payload: {\r\n        total: number,\r\n        data: IMovie[]\r\n    }\r\n}\r\nexport function setMovieAction(movies: any, total: number): setMovieAction {\r\n    return {\r\n        type: \"set_movie\",\r\n        payload: {\r\n            total: total,\r\n            data: movies\r\n        }\r\n    }\r\n}\r\nexport interface setLoadingAction {\r\n    type: \"set_loading\",\r\n    payload: boolean\r\n}\r\n\r\nexport function setLoadingAction(isLoading: boolean): setLoadingAction {\r\n    return {\r\n        type: \"set_loading\",\r\n        payload: isLoading\r\n\r\n    }\r\n}\r\n\r\nexport interface setConditionAction {\r\n    type: \"set_condition\",\r\n    payload: ISearchCondition\r\n}\r\n\r\nexport function setConditionAction(condition: ISearchCondition): setConditionAction {\r\n    return {\r\n        type: \"set_condition\",\r\n        payload: condition\r\n    }\r\n}\r\nexport interface deleteMovieAction {\r\n    type: \"delete_movie\",\r\n    payload: string\r\n}\r\nexport function deleteMovieAction(id: string): deleteMovieAction {\r\n    return {\r\n        type: \"delete_movie\",\r\n        payload: id\r\n    }\r\n}\r\nexport interface fetchMovieAction {\r\n    type: \"fetch_movie\",\r\n\r\n}\r\nexport function fetchMovieAction(): fetchMovieAction {\r\n    return {\r\n        type: \"fetch_movie\",\r\n\r\n\r\n    }\r\n}\r\nexport interface asyncDeleteMovieAction {\r\n    type: \"async_delete_movie\",\r\n    payload: string\r\n\r\n}\r\nexport function asyncDeleteMovieAction(id: string): asyncDeleteMovieAction {\r\n    return {\r\n        type: \"async_delete_movie\",\r\n        payload: id\r\n\r\n    }\r\n}\r\n//switch 按钮事件改变仓库\r\nexport interface changeSwitchAction {\r\n    type: \"movie_switch\"\r\n    payload: {\r\n        type: SwitchType,\r\n        newVal: boolean,\r\n        id: string\r\n    }\r\n\r\n\r\n}\r\nexport function changeSwitchAction(type: SwitchType, newVal: boolean, id: string): changeSwitchAction {\r\n    // console.log(type, newVal, id)\r\n    return {\r\n        type: \"movie_switch\",\r\n        payload: {\r\n            type,\r\n            newVal,\r\n            id\r\n        }\r\n\r\n    }\r\n}\r\n\r\n//switch 按钮事件改变数据库\r\nexport interface asyncEditMovieAction {\r\n    type: \"async_edit_movie\"\r\n}\r\n\r\nexport function asyncEditMovieAction(type: SwitchType, newVal: boolean, id: string): asyncEditMovieAction {\r\n    // console.log(type, newVal, id)\r\n    return {\r\n        type: \"async_edit_movie\",\r\n    }\r\n}\r\nexport type movieActions = setConditionAction | deleteMovieAction | setMovieAction | setLoadingAction | fetchMovieAction | asyncDeleteMovieAction | changeSwitchAction | asyncEditMovieAction","import MovieTable from \"../../components/MovieTable\"\r\nimport { connect } from \"react-redux\"\r\nimport { IRootState } from '../../store/reducers/reducers'\r\nimport { Dispatch } from \"react\"\r\nimport { movieActions, fetchMovieAction, changeSwitchAction, deleteMovieAction, setConditionAction } from \"../../store/actions/movieAction\"\r\nimport { SwitchType } from \"../../services/CommonTypes\"\r\n\r\nfunction mapStateToProps(state: IRootState) {\r\n    return state.movie\r\n}\r\nfunction mapDispatchToProps(dispatch: Dispatch<movieActions>) {\r\n    return {\r\n        onLoad() {\r\n            dispatch(setConditionAction({\r\n                page: 1,\r\n                limit: 10,\r\n                key: \"\"\r\n            }))\r\n            dispatch(fetchMovieAction())\r\n        },\r\n        onSwitchChange(type: SwitchType, val: boolean, id: string) {\r\n            // console.log(type, val, id)\r\n            dispatch(changeSwitchAction(type, val, id))\r\n        },\r\n        onDeleteMovie(id: string) {\r\n            dispatch(deleteMovieAction(id))\r\n            dispatch(fetchMovieAction())\r\n        },\r\n        onChangePage(page: number) {\r\n            dispatch(setConditionAction({\r\n                page\r\n            }))\r\n            dispatch(fetchMovieAction())\r\n        },\r\n        onKeyChange(key: string) {\r\n            dispatch(setConditionAction({\r\n                key\r\n            }))\r\n\r\n        },\r\n        onSearch() {\r\n            dispatch(setConditionAction({\r\n                page: 1\r\n            }))\r\n            dispatch(fetchMovieAction())\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieTable)\r\n","import React, { Component } from 'react'\r\nimport { Upload, Icon, message } from 'antd';\r\nimport { RcFile, UploadChangeParam } from 'antd/lib/upload';\r\nimport { UploadFile } from 'antd/lib/upload/interface';\r\n\r\n\r\n\r\ninterface uploadProps {\r\n    value?: string,\r\n    onChange?: (imageUrl: string) => void\r\n}\r\ninterface uploadState {\r\n    loading: boolean,\r\n\r\n}\r\n\r\nexport default class uploadPoster extends Component<uploadProps, uploadState> {\r\n\r\n    state = {\r\n        loading: false,\r\n    };\r\n\r\n    beforeUpload = (file: RcFile) => {\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n        if (!isJpgOrPng) {\r\n            message.error('You can only upload JPG/PNG file!');\r\n        }\r\n        const isLt2M = file.size / 1024 / 1024 < 2;\r\n        if (!isLt2M) {\r\n            message.error('Image must smaller than 2MB!');\r\n        }\r\n        this.setState({ loading: true });\r\n        return isJpgOrPng && isLt2M;\r\n    }\r\n\r\n    handleChange: (info: UploadChangeParam<UploadFile<any>>) => void = (info) => {\r\n        // console.log(info)\r\n        if (info.file.status === 'done') {\r\n            if (info.file.response.err) {\r\n                message.error(\"上传失败\")\r\n            } else {\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                this.props.onChange && this.props.onChange(info.file.response.data)\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n    render() {\r\n        const uploadButton = (\r\n            <div>\r\n                {this.state.loading ? <Icon type=\"loading\" /> : <Icon type=\"plus\" />}\r\n                <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div>\r\n                <Upload\r\n                    name=\"imgname\"\r\n                    listType=\"picture-card\"\r\n                    showUploadList={false}\r\n                    action=\"/api/upload\"\r\n                    beforeUpload={this.beforeUpload}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {this.props.value ? <img src={this.props.value} alt=\"poster\" style={{ width: '100%' }} /> : uploadButton}\r\n                </Upload>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Dispatch } from 'react'\r\nimport { Form, Input, Button, Checkbox, InputNumber, Switch, message, Modal } from 'antd'\r\nimport { WrappedFormUtils } from 'antd/lib/form/Form';\r\nimport UploadPoster from './uploadPoster';\r\nimport { CheckboxOptionType } from 'antd/lib/checkbox';\r\nimport { IMovie } from '../services/MovieService';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { IRootState } from '../store/reducers/reducers';\r\nimport { IMovieType } from '../services/MovieTypeService';\r\nimport { IMovieTypeState } from '../store/reducers/movieTypeReducer';\r\nimport { IMovieAreaState } from '../store/reducers/movieAreaReducer';\r\nimport { movieTypeActions, fetchMovieTypeAction } from '../store/actions/movieTypeAction';\r\nimport { movieAreaActions, fetchMovieAreaAction } from '../store/actions/movieAreaAction';\r\nimport { IMovieArea } from '../services/MovieAreaService';\r\ninterface IMovieFormProp extends RouteComponentProps {\r\n    form: WrappedFormUtils\r\n    onSubmit: (movie: IMovie) => Promise<string>\r\n    movie?: IMovie,\r\n    onLoad: () => void,\r\n    area: IMovieAreaState,\r\n    type: IMovieTypeState\r\n}\r\ninterface IMovieFormState {\r\n    isModal: boolean\r\n}\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n    },\r\n};\r\n\r\n\r\nclass MovieForm extends Component<IMovieFormProp, IMovieFormState>{\r\n\r\n    state = {\r\n        isModal: false\r\n    }\r\n    componentDidMount() {\r\n        console.log(this.props)\r\n        this.props.onLoad()\r\n\r\n    }\r\n\r\n    private handleSubmit = (e: React.FormEvent<any>) => {\r\n        console.log()\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (error) => {\r\n            if (!error) {\r\n                const formData = this.props.form.getFieldsValue()\r\n                const res = await this.props.onSubmit(formData as IMovie)\r\n                if (res) {\r\n                    message.error(res)\r\n                } else {\r\n                    if (this.props.movie) {\r\n                        Modal.confirm({\r\n                            title: '编辑成功是否跳转到电影列表页面？',\r\n                            okText: '确认',\r\n                            cancelText: '取消',\r\n                            onOk: () => {\r\n                                this.props.history.push(\"/movie\")\r\n                            }\r\n                        })\r\n                    } else {\r\n                        Modal.confirm({\r\n                            title: '添加成功是否跳转到电影列表页面？',\r\n                            okText: '确认',\r\n                            cancelText: '取消',\r\n                            onOk: () => {\r\n                                this.props.history.push(\"/movie\")\r\n                            }\r\n                        })\r\n\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    private handleGetAreas(): CheckboxOptionType[] {\r\n        const newData = this.props.area.data.filter(i => i.isShow)\r\n        const data = newData.map((it: IMovieArea) => {\r\n            const obj: any = {}\r\n            obj.label = it.area;\r\n            obj.value = it.area\r\n            return obj\r\n        },\r\n        )\r\n        return data\r\n    }\r\n    private handleGetTypes(): CheckboxOptionType[] {\r\n        const newData = this.props.type.data.filter(i => i.isShow)\r\n        const data = newData.map((it: IMovieType) => {\r\n            const obj: any = {}\r\n            obj.label = it.types;\r\n            obj.value = it.types\r\n            return obj\r\n        },\r\n        )\r\n        return data\r\n    }\r\n    render() {\r\n        const allAreas: CheckboxOptionType[] = this.handleGetAreas();\r\n        const allTypes: CheckboxOptionType[] = this.handleGetTypes();\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form {...formItemLayout}\r\n                onSubmit={this.handleSubmit}\r\n            >\r\n                <Form.Item label=\"海报\">\r\n                    {getFieldDecorator<IMovie>('poster')(\r\n                        <UploadPoster />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"电影名称\">\r\n                    {getFieldDecorator<IMovie>('name', {\r\n                        rules: [{ required: true, message: '请输入电影名称' }],\r\n                    })(\r\n                        <Input />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"地区\"\r\n                >\r\n                    {getFieldDecorator<IMovie>('area', {\r\n                        rules: [{ required: true, message: '请选择上映地区' }],\r\n                    })(\r\n                        <Checkbox.Group options={allAreas} />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"类型\"\r\n                >\r\n                    {getFieldDecorator<IMovie>('types', {\r\n                        rules: [{ required: true, message: '请选择电影类型' }],\r\n                    })(\r\n                        <Checkbox.Group options={allTypes} />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"时长\"\r\n                >\r\n                    {getFieldDecorator<IMovie>('timelong', {\r\n                        rules: [{ required: true, message: '请输入电影时长' }],\r\n                    })(\r\n                        <InputNumber min={1} step={10} />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"是否热映\"\r\n                >\r\n                    {getFieldDecorator<IMovie>('isHot', {\r\n                        valuePropName: 'checked',\r\n                        initialValue: false\r\n                    })(\r\n                        <Switch />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"是否正在上映\"\r\n                >\r\n                    {getFieldDecorator<IMovie>('isComing', {\r\n                        valuePropName: 'checked',\r\n                        initialValue: false\r\n\r\n                    })(\r\n                        <Switch />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"是否经典\"\r\n                >\r\n                    {getFieldDecorator<IMovie>('isClassic', {\r\n                        valuePropName: 'checked',\r\n                        initialValue: false\r\n                    })(\r\n                        <Switch />\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item label=\"描述\"\r\n                >\r\n                    {getFieldDecorator<IMovie>('discription', {\r\n\r\n                    })(\r\n                        <Input.TextArea />\r\n                    )}\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    wrapperCol={{\r\n                        span: 20,\r\n                        offset: 4\r\n                    }}\r\n                >\r\n                    <Button type=\"primary\" htmlType=\"submit\" >提交</Button>\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state: IRootState) => {\r\n    const area = state.area;\r\n    const type = state.type;\r\n    return { area, type }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch<movieAreaActions | movieTypeActions>) => {\r\n    return {\r\n        onLoad() {\r\n            dispatch(fetchMovieAreaAction())\r\n            dispatch(fetchMovieTypeAction())\r\n        },\r\n\r\n    }\r\n}\r\n\r\ntype MovieField = {\r\n    [p in Exclude<keyof IMovie, \"_id\">]: any\r\n}\r\nfunction fieldsHelper(movie: any): MovieField {\r\n    let obj: any = {}\r\n    for (const key in movie) {\r\n        obj[key] = Form.createFormField({\r\n            value: movie[key]\r\n        })\r\n    }\r\n    return obj\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Form.create<IMovieFormProp>({\r\n    mapPropsToFields(props) {\r\n        if (props.movie) {\r\n            return fieldsHelper(props.movie)\r\n        }\r\n    },\r\n}\r\n)(MovieForm)))\r\n\r\n","import { IMovieArea } from \"../../services/MovieAreaService\";\r\n\r\nexport interface setMovieAreaAction {\r\n    type: \"set_movie_area\",\r\n    payload: {\r\n        total: number,\r\n        data: IMovieArea[]\r\n    }\r\n}\r\nexport function setMovieAreaAction(total: number, data: IMovieArea[]): setMovieAreaAction {\r\n    return {\r\n        type: \"set_movie_area\",\r\n        payload: {\r\n            total,\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport interface deleteMovieAreaAction {\r\n    type: \"delete_movie_area\",\r\n    payload: string\r\n}\r\n\r\nexport function deleteMovieAreaAction(id: string): deleteMovieAreaAction {\r\n    return {\r\n        type: \"delete_movie_area\",\r\n        payload: id\r\n    }\r\n}\r\nexport interface fetchMovieAreaAction {\r\n    type: \"fetch_movie_area\",\r\n\r\n}\r\n\r\nexport function fetchMovieAreaAction(): fetchMovieAreaAction {\r\n    return {\r\n        type: \"fetch_movie_area\",\r\n\r\n    }\r\n}\r\nexport interface editMovieAreaAction {\r\n    type: \"edit_movie_area\",\r\n    payload: {\r\n        area: string,\r\n\r\n        _id: string\r\n    }\r\n\r\n}\r\n\r\nexport function editMovieAreaAction(id: string, area: string): editMovieAreaAction {\r\n    return {\r\n        type: \"edit_movie_area\",\r\n        payload: {\r\n            area,\r\n            _id: id\r\n        }\r\n    }\r\n}\r\n\r\nexport interface changeMovieAreaAction {\r\n    type: \"change_movie_area\",\r\n    payload: {\r\n        isShow: boolean,\r\n        _id: string\r\n    }\r\n\r\n}\r\n\r\nexport function changeMovieAreaAction(id: string, isShow: boolean): changeMovieAreaAction {\r\n    return {\r\n        type: \"change_movie_area\",\r\n        payload: {\r\n            isShow,\r\n            _id: id\r\n        }\r\n    }\r\n}\r\nexport type movieAreaActions = setMovieAreaAction | deleteMovieAreaAction | fetchMovieAreaAction | editMovieAreaAction | changeMovieAreaAction","import { IMovieType } from \"../../services/MovieTypeService\";\r\n\r\nexport interface setMovieTypeAction {\r\n    type: \"set_movie_type\",\r\n    payload: {\r\n        total: number,\r\n        data: IMovieType[]\r\n    }\r\n}\r\nexport function setMovieTypeAction(total: number, data: IMovieType[]): setMovieTypeAction {\r\n    return {\r\n        type: \"set_movie_type\",\r\n        payload: {\r\n            total,\r\n            data\r\n        }\r\n    }\r\n}\r\n\r\nexport interface deleteMovieTypeAction {\r\n    type: \"delete_movie_type\",\r\n    payload: string\r\n}\r\n\r\nexport function deleteMovieTypeAction(id: string): deleteMovieTypeAction {\r\n    return {\r\n        type: \"delete_movie_type\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport interface fetchMovieTypeAction {\r\n    type: \"fetch_movie_type\",\r\n\r\n}\r\n\r\nexport function fetchMovieTypeAction(): fetchMovieTypeAction {\r\n    return {\r\n        type: \"fetch_movie_type\",\r\n\r\n    }\r\n}\r\n\r\nexport interface editMovieTypeAction {\r\n    type: \"edit_movie_type\",\r\n    payload: {\r\n        types: string,\r\n\r\n        _id: string\r\n    }\r\n\r\n}\r\n\r\nexport function editMovieTypeAction(id: string, types: string): editMovieTypeAction {\r\n    return {\r\n        type: \"edit_movie_type\",\r\n        payload: {\r\n            types,\r\n            _id: id\r\n        }\r\n    }\r\n}\r\n\r\nexport interface changeMovieTypeAction {\r\n    type: \"change_movie_type\",\r\n    payload: {\r\n        isShow: boolean,\r\n        _id: string\r\n    }\r\n\r\n}\r\n\r\nexport function changeMovieTypeAction(id: string, isShow: boolean): changeMovieTypeAction {\r\n    return {\r\n        type: \"change_movie_type\",\r\n        payload: {\r\n            isShow,\r\n            _id: id\r\n        }\r\n    }\r\n}\r\n\r\nexport type movieTypeActions = setMovieTypeAction | deleteMovieTypeAction | fetchMovieTypeAction | changeMovieTypeAction | editMovieTypeAction","import axios from 'axios'\r\nimport { IResponseData, IResponseError, IResponsePageData } from './CommonTypes'\r\nexport interface IMovie {\r\n    _id?: string,\r\n    name: string,\r\n    types: string[],\r\n    area: string[],\r\n    timelong: number,\r\n    isHot: boolean,\r\n    isComing: boolean,\r\n    isClassic: boolean,\r\n    discription: string,\r\n    poster: string,\r\n}\r\n\r\ninterface ICondition {\r\n    page?: number\r\n    limit?: number\r\n    key?: string\r\n}\r\n\r\nexport class MovieService {\r\n    public static async add(movie: IMovie): Promise<IResponseData<IMovie> | IResponseError> {\r\n        const { data } = await axios.post(\"/api/movie\", movie)\r\n        return data\r\n\r\n    }\r\n    public static async edit(id: string, movie: Partial<IMovie>): Promise<IResponseData<true> | IResponseError> {\r\n        const { data } = await axios.put(\"/api/movie/\" + id, movie)\r\n        return data\r\n\r\n    }\r\n    public static async delete(id: string): Promise<IResponseData<IMovie> | IResponseError> {\r\n        const { data } = await axios.delete(\"/api/movie/\" + id)\r\n        return data\r\n\r\n    }\r\n    public static async findById(id: string): Promise<IResponseData<IMovie> | IResponseError> {\r\n        const { data } = await axios.get(\"/api/movie/\" + id)\r\n        return data\r\n\r\n    }\r\n    public static async findByCondition(condition: ICondition): Promise<IResponsePageData<IMovie>> {\r\n        const { data } = await axios.get(\"/api/movie/\", {\r\n            params: condition\r\n        })\r\n        return data\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport MovieForm from '../../components/MovieForm'\r\nimport { MovieService } from '../../services/MovieService'\r\n\r\nexport default class AddMovie extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <MovieForm onSubmit={async (movie) => {\r\n                const res = await MovieService.add(movie)\r\n                if (res.data) {\r\n                    return \"\"\r\n                } else {\r\n                    return res.err\r\n                }\r\n\r\n            }} />\r\n\r\n        )\r\n    }\r\n}\r\n","import { IResponseData, IResponseError } from \"./CommonTypes\"\r\nimport axios from 'axios'\r\nexport interface IMovieType {\r\n    _id?: string,\r\n    types: string,\r\n    isShow: boolean\r\n}\r\nexport class MovieTypeService {\r\n    public static async add(type: IMovieType): Promise<IResponseData<IMovieType> | IResponseError> {\r\n        const { data } = await axios.post(\"/api/type/add\", type)\r\n        return data\r\n\r\n    }\r\n    public static async edit(id: string, type: Partial<IMovieType>): Promise<IResponseData<true> | IResponseError> {\r\n        const { data } = await axios.put(\"/api/type/\" + id, type)\r\n        return data\r\n\r\n    }\r\n    public static async delete(id: string): Promise<IResponseData<IMovieType> | IResponseError> {\r\n        const { data } = await axios.delete(\"/api/type/\" + id)\r\n        return data\r\n\r\n\r\n    }\r\n    public static async find(): Promise<IResponseData<IMovieType> | IResponseError> {\r\n        const { data } = await axios.get(\"/api/type\")\r\n        return data\r\n\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Tag } from 'antd';\r\nconst { CheckableTag } = Tag;\r\n\r\ninterface TagProp {\r\n    checked: boolean,\r\n    onChange: (e: boolean) => void,\r\n    // key: string\r\n\r\n}\r\nexport default class MyTag extends Component<TagProp> {\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <CheckableTag checked={this.props.checked} onChange={this.props.onChange} className=\"tag-style\" children={this.props.children} ></CheckableTag>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component, Dispatch } from 'react'\r\nimport { IMovieType, MovieTypeService } from '../../services/MovieTypeService'\r\nimport { fetchMovieTypeAction, changeMovieTypeAction, movieTypeActions } from '../../store/actions/movieTypeAction'\r\nimport { IRootState } from '../../store/reducers/reducers'\r\n\r\nimport { message, Button, Modal, Input } from 'antd'\r\nimport MyTag from '../../components/Tag'\r\nimport { connect } from 'react-redux'\r\n\r\ninterface ITypeProp {\r\n    data: IMovieType[],\r\n    onLoad: () => void,\r\n    onChange: (id: string, isShow: boolean) => void\r\n    addType: (text: string) => Promise<string>\r\n}\r\nclass Type extends Component<ITypeProp, any>{\r\n    state = {\r\n        visible: false,\r\n        confirmLoading: false,\r\n        ModalText: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onLoad()\r\n\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n\r\n    }\r\n    handleAdd = async () => {\r\n        this.setState({\r\n            confirmLoading: true,\r\n        });\r\n        const result = this.props.data.find((it: IMovieType) => it.types === this.state.ModalText)\r\n        if (!result) {\r\n            const res = await this.props.addType(this.state.ModalText)\r\n            if (!res) {\r\n                message.success(\"添加成功\")\r\n            } else {\r\n                message.warn(\"添加失败\")\r\n            }\r\n        } else {\r\n            message.warn(\"类型不可以重复\")\r\n        }\r\n        this.setState({\r\n            visible: false,\r\n            confirmLoading: false,\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n        const tags = this.props.data.map((a: IMovieType, i: number) => (<MyTag key={i} checked={a.isShow} onChange={(e) => {\r\n            this.props.onChange(a._id!, e)\r\n        }} children={a.types}></MyTag>))\r\n        return (\r\n            <div>\r\n                {tags}\r\n                <Button type=\"danger\" onClick={() => {\r\n                    this.setState({\r\n                        visible: true\r\n                    })\r\n                }}>添加</Button>\r\n                <Modal\r\n                    title=\"添加的电影类型\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleAdd}\r\n                    onCancel={this.hideModal}\r\n                    okText=\"添加\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <Input placeholder=\"请输入添加的电影类型\" onChange={(e) => {\r\n                        this.setState({\r\n                            ModalText: e.target.value,\r\n                        });\r\n                    }} />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state: IRootState) => {\r\n    return state.type\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<movieTypeActions>) => {\r\n    return {\r\n        onLoad() {\r\n            dispatch(fetchMovieTypeAction())\r\n        },\r\n        onChange(id: string, isShow: boolean) {\r\n            dispatch(changeMovieTypeAction(id, isShow))\r\n        },\r\n        async addType(types: string) {\r\n            const res = await MovieTypeService.add({\r\n                types,\r\n                isShow: true\r\n            })\r\n            console.log(res)\r\n            if (!res.err) {\r\n                dispatch(fetchMovieTypeAction())\r\n            }\r\n\r\n            return res.err\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Type)","import { IResponseData, IResponseError } from \"./CommonTypes\"\r\nimport axios from 'axios'\r\nexport interface IMovieArea {\r\n    _id?: string,\r\n    area: string,\r\n    isShow: boolean\r\n}\r\nexport class MovieAreaService {\r\n    public static async add(area: IMovieArea): Promise<IResponseData<IMovieArea> | IResponseError> {\r\n        const { data } = await axios.post(\"/api/area/add\", area)\r\n        return data\r\n\r\n    }\r\n    public static async edit(id: string, area: Partial<IMovieArea>): Promise<IResponseData<true> | IResponseError> {\r\n        const { data } = await axios.put(\"/api/area/\" + id, area)\r\n        return data\r\n\r\n    }\r\n    public static async delete(id: string): Promise<IResponseData<IMovieArea> | IResponseError> {\r\n        const { data } = await axios.delete(\"/api/area/\" + id)\r\n        return data\r\n\r\n\r\n    }\r\n    public static async find(): Promise<IResponseData<IMovieArea> | IResponseError> {\r\n        const { data } = await axios.get(\"/api/area\")\r\n        return data\r\n\r\n    }\r\n}\r\n\r\n","import React, { Component, Dispatch } from 'react'\r\nimport MyTag from '../../components/Tag'\r\nimport { connect } from 'react-redux'\r\nimport { IRootState } from '../../store/reducers/reducers'\r\nimport { IMovieArea, MovieAreaService } from '../../services/MovieAreaService'\r\nimport { movieAreaActions, fetchMovieAreaAction, editMovieAreaAction, changeMovieAreaAction } from '../../store/actions/movieAreaAction'\r\nimport { Button, Modal, Input, message } from 'antd'\r\ninterface IAreaProp {\r\n    data: IMovieArea[],\r\n    onLoad: () => void,\r\n    onChange: (id: string, isShow: boolean) => void\r\n    addArea: (text: string) => Promise<string>\r\n}\r\nclass Area extends Component<IAreaProp, any>{\r\n    state = {\r\n        visible: false,\r\n        confirmLoading: false,\r\n        ModalText: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onLoad()\r\n\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState({\r\n            visible: false\r\n        })\r\n\r\n    }\r\n    handleAdd = async () => {\r\n        this.setState({\r\n            confirmLoading: true,\r\n        });\r\n        const result = this.props.data.find((it: IMovieArea) => it.area === this.state.ModalText)\r\n        if (!result) {\r\n            const res = await this.props.addArea(this.state.ModalText)\r\n            if (!res) {\r\n                message.success(\"添加成功\")\r\n            } else {\r\n                message.warn(\"添加失败\")\r\n            }\r\n        } else {\r\n            message.warn(\"地区不可以重复\")\r\n        }\r\n        this.setState({\r\n            visible: false,\r\n            confirmLoading: false,\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n    render() {\r\n        const tags = this.props.data.map((a: IMovieArea, i: number) => (<MyTag key={i} checked={a.isShow} onChange={(e) => {\r\n            this.props.onChange(a._id!, e)\r\n        }} children={a.area}></MyTag>))\r\n        return (\r\n            <div>\r\n                {tags}\r\n                <Button type=\"danger\" onClick={() => {\r\n                    this.setState({\r\n                        visible: true\r\n                    })\r\n                }}>添加</Button>\r\n                <Modal\r\n                    title=\"添加的电影上映区域\"\r\n                    visible={this.state.visible}\r\n                    onOk={this.handleAdd}\r\n                    onCancel={this.hideModal}\r\n                    okText=\"添加\"\r\n                    cancelText=\"取消\"\r\n                >\r\n                    <Input placeholder=\"请输入添加的电影上映区域\" onChange={(e) => {\r\n                        this.setState({\r\n                            ModalText: e.target.value,\r\n                        });\r\n                    }} />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state: IRootState) => {\r\n    return state.area\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<movieAreaActions>) => {\r\n    return {\r\n        onLoad() {\r\n            dispatch(fetchMovieAreaAction())\r\n        },\r\n        onChange(id: string, isShow: boolean) {\r\n            dispatch(changeMovieAreaAction(id, isShow))\r\n        },\r\n        async addArea(area: string) {\r\n            const res = await MovieAreaService.add({\r\n                area,\r\n                isShow: true\r\n            })\r\n            console.log(res)\r\n            if (!res.err) {\r\n                dispatch(fetchMovieAreaAction())\r\n            }\r\n\r\n            return res.err\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Area)\r\n","import React, { Component } from 'react'\r\nimport { RouteComponentProps } from 'react-router'\r\nimport MovieForm from '../../components/MovieForm'\r\nimport { MovieService, IMovie } from '../../services/MovieService'\r\n\r\ninterface IParams {\r\n    id: string\r\n}\r\ninterface IState {\r\n    movie: IMovie | undefined\r\n}\r\nexport default class EditMovie extends Component<RouteComponentProps<IParams>, IState>{\r\n\r\n    state = {\r\n        movie: undefined\r\n    }\r\n    async componentDidMount() {\r\n        const res = await MovieService.findById(this.props.match.params.id)\r\n        this.setState({\r\n            movie: res.data!\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <MovieForm onSubmit={async (movie) => {\r\n                    const res = await MovieService.edit(this.props.match.params.id, movie)\r\n                    if (res.data) {\r\n                        return \"\"\r\n                    } else {\r\n                        return res.err\r\n                    }\r\n\r\n                }}\r\n                    movie={this.state.movie}\r\n                />\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Button, Checkbox, Input, message, Modal } from 'antd'\r\nimport { IUser } from '../services/UserService';\r\nimport { WrappedFormUtils } from 'antd/lib/form/Form';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 4 },\r\n    },\r\n    wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n            offset: 0,\r\n        },\r\n        sm: {\r\n            span: 12,\r\n            offset: 4,\r\n        },\r\n    },\r\n};\r\ninterface IUserFormProp extends RouteComponentProps {\r\n    user?: IUser,\r\n    onChange: (user: IUser) => Promise<string>,\r\n    form: WrappedFormUtils\r\n}\r\nclass UserForm extends Component<IUserFormProp, any> {\r\n\r\n    handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields(async (err: any, values: any) => {\r\n            if (!err) {\r\n                console.log(values)\r\n\r\n                const res = await this.props.onChange(values)\r\n                if (res) {\r\n                    message.warn(res)\r\n                } else {\r\n                    if (this.props.user) {\r\n\r\n                        Modal.confirm({\r\n                            title: '编辑成功是否跳转到电影列表页面？',\r\n                            okText: '确认',\r\n                            cancelText: '取消',\r\n                            onOk: () => {\r\n                                this.props.history.push(\"/user\")\r\n                            }\r\n                        })\r\n                    } else {\r\n                        Modal.confirm({\r\n                            title: '添加成功是否跳转到电影列表页面？',\r\n                            okText: '确认',\r\n                            cancelText: '取消',\r\n                            onOk: () => {\r\n                                this.props.history.push(\"/user\")\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n                <Form.Item label=\"用户名\">\r\n                    {getFieldDecorator('username', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入用户名!',\r\n                            },\r\n                            {\r\n                                max: 18,\r\n                                message: '用户名长度不能超过18!'\r\n                            },\r\n                            {\r\n                                min: 3,\r\n                                message: '用户名长度不能小于3!'\r\n                            }\r\n                        ],\r\n                    })(<Input />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"密码\" hasFeedback>\r\n                    {getFieldDecorator('password', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入密码',\r\n\r\n                            },\r\n                            {\r\n                                max: 18,\r\n                                message: '用户名长度不能超过18!'\r\n                            },\r\n                            {\r\n                                min: 6,\r\n                                message: '用户名长度不能小于6!'\r\n                            },\r\n\r\n                        ],\r\n                    })(<Input.Password />)}\r\n                </Form.Item>\r\n                {/*    <Form.Item label=\"再次输入密码\" hasFeedback>\r\n                    {getFieldDecorator('confirm', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请再次输入密码!',\r\n                            },\r\n                            {\r\n                                validator: this.compareToFirstPassword,\r\n                            },\r\n                        ],\r\n                    })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n                </Form.Item> */}\r\n\r\n                <Form.Item label=\"姓名\">\r\n                    {getFieldDecorator('name', {\r\n                        rules: [\r\n                            {\r\n                                required: true,\r\n                                message: '请输入姓名!',\r\n                            },\r\n                            {\r\n                                max: 10,\r\n                                message: '姓名长度不能超过10!'\r\n                            },\r\n                            {\r\n                                min: 1,\r\n                                message: '姓名长度不能小于1!'\r\n                            }\r\n                        ],\r\n                    })(<Input />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"手机号\">\r\n                    {getFieldDecorator('phone', {\r\n                        rules: [\r\n                            { required: true, message: '请输入手机号' },\r\n                            {\r\n                                max: 11,\r\n                                message: '手机号长度不能超过11!'\r\n                            },\r\n                            {\r\n                                min: 11,\r\n                                message: '手机号长度不能小于11!'\r\n                            },\r\n                            {\r\n                                pattern: /^[1][3-8][0-9]{9}$/, message: '请输入正确手机号'\r\n                            }\r\n\r\n                        ],\r\n                    })(<Input />)}\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item {...tailFormItemLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n              </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\ntype UserField = {\r\n    [p in Exclude<keyof IUser, \"_id\">]: any\r\n}\r\nfunction getFields(user: any): UserField {\r\n    const obj: any = {}\r\n    for (const key in user) {\r\n        if (user.hasOwnProperty(key)) {\r\n            obj[key] = Form.createFormField({\r\n                value: user[key],\r\n            })\r\n        }\r\n    }\r\n    return obj\r\n}\r\nexport default withRouter(Form.create<IUserFormProp>({\r\n    mapPropsToFields(props) {\r\n        if (props.user) {\r\n            return getFields(props.user)\r\n        }\r\n    }\r\n})(UserForm))\r\n","import axios from \"axios\";\r\nimport { IResponseData, IResponseError } from \"./CommonTypes\";\r\n\r\nexport interface IUser {\r\n    _id?: string\r\n    username: string,\r\n    password: string,\r\n    name: string,\r\n    phone: number\r\n}\r\n\r\nexport interface IUserCondition {\r\n    page?: number\r\n    limit?: number\r\n    key?: string\r\n}\r\n\r\nexport class UserService {\r\n    public static async add(user: IUser): Promise<IResponseData<IUser> | IResponseError> {\r\n        const res = await axios.post(\"/api/user/add\", user)\r\n        return res.data\r\n\r\n    }\r\n    public static async delete(id: string): Promise<IResponseData<IUser> | IResponseError> {\r\n        const res = await axios.delete(\"/api/user/\" + id)\r\n        return res.data\r\n\r\n    }\r\n    public static async edit(id: string, user: IUser): Promise<IResponseData<IUser> | IResponseError> {\r\n        const res = await axios.put(\"/api/user/\" + id, user)\r\n        return res.data\r\n\r\n    }\r\n    public static async find(condition: IUserCondition): Promise<IResponseData<IUser> | IResponseError> {\r\n        const res = await axios.get(\"/api/user/\", {\r\n            params: condition\r\n        })\r\n        console.log(res)\r\n        return res.data\r\n\r\n    }\r\n\r\n    public static async findById(id: string): Promise<IResponseData<IUser> | IResponseError> {\r\n        const res = await axios.get(\"/api/user/\" + id)\r\n        return res.data\r\n\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport UserForm from '../../components/UserForm'\r\nimport { IUser, UserService } from '../../services/UserService'\r\n\r\nexport default class AddUser extends Component {\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div>\r\n                <UserForm onChange={\r\n                    async (value: IUser) => {\r\n                        const res = await UserService.add(value)\r\n                        return res.err\r\n\r\n                    }\r\n                } />>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Table, Button, Popconfirm } from 'antd';\r\nimport { IUser, IUserCondition } from '../services/UserService';\r\nimport { ColumnProps, PaginationConfig } from 'antd/lib/table';\r\n\r\n\r\ninterface IUserTable {\r\n    data: IUser[],\r\n    onload: () => void,\r\n    onDeleteUser: (_id: string) => void,\r\n    condition: IUserCondition,\r\n    total: number,\r\n    onPageChange: (condition: IUserCondition) => void\r\n}\r\nexport default class UserTable extends Component<IUserTable> {\r\n\r\n    componentDidMount() {\r\n        this.props.onload()\r\n    }\r\n    private pageConfig = (): false | PaginationConfig => {\r\n\r\n        if (this.props.total === 0) {\r\n            return false\r\n        }\r\n        return {\r\n            current: this.props.condition.page,\r\n            pageSize: this.props.condition.limit,\r\n            total: this.props.total\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private getColumns = (): ColumnProps<IUser>[] => {\r\n        return [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n                key: 'username',\r\n            },\r\n            {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            },\r\n            {\r\n                title: '联系电话',\r\n                dataIndex: 'phone',\r\n                key: 'phone',\r\n            },\r\n            {\r\n                title: '操作',\r\n                key: '_id',\r\n                render: (text) => (\r\n                    <div>\r\n                        <Button type=\"primary\" size='small' href={`user/edit/${text._id}`}>编辑</Button>&nbsp;\r\n                        <Popconfirm\r\n                            title=\"确定要删除吗?\"\r\n                            onConfirm={(e) => {\r\n                                if (e) {\r\n                                    this.props.onDeleteUser(text._id)\r\n                                }\r\n                            }}\r\n\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                        >\r\n                            <Button type=\"danger\" size='small'\r\n                            >删除</Button> </Popconfirm>\r\n\r\n                    </div>\r\n\r\n                ),\r\n            },\r\n        ]\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <Table\r\n                rowKey=\"_id\"\r\n                pagination={\r\n                    this.pageConfig()\r\n                }\r\n                onChange={(e) => {\r\n                    this.props.onPageChange({\r\n                        page: e.current,\r\n                        limit: e.pageSize,\r\n                    })\r\n                    console.log(e)\r\n                }}\r\n                dataSource={this.props.data}\r\n                columns={this.getColumns()} />\r\n        )\r\n    }\r\n}\r\n","import { IUser, IUserCondition } from \"../../services/UserService\";\r\n\r\nexport interface setUserAction {\r\n    type: \"set_user\",\r\n    payload: {\r\n        data: IUser[],\r\n        total: number\r\n    }\r\n}\r\nexport function setUserAction(users: IUser[], total: number): setUserAction {\r\n    return {\r\n        type: \"set_user\",\r\n        payload: {\r\n            data: users,\r\n            total,\r\n        }\r\n    }\r\n}\r\n\r\nexport interface setUserIsLoadingAction {\r\n    type: \"set_user_isloading\",\r\n    payload: boolean\r\n}\r\nexport function setUserIsLoadingAction(isLoading: boolean): setUserIsLoadingAction {\r\n    return {\r\n        type: \"set_user_isloading\",\r\n        payload: isLoading\r\n    }\r\n}\r\nexport interface deleteUserAction {\r\n    type: \"delete_user\",\r\n    payload: string\r\n}\r\nexport function deleteUserAction(id: string): deleteUserAction {\r\n    return {\r\n        type: \"delete_user\",\r\n        payload: id\r\n    }\r\n}\r\nexport interface fetchUserAction {\r\n    type: \"fetch_user\",\r\n\r\n}\r\nexport function fetchUserAction(): fetchUserAction {\r\n    return {\r\n        type: \"fetch_user\",\r\n\r\n    }\r\n}\r\n\r\nexport interface setSearchUserConditionAction {\r\n    type: \"set_user_condition\",\r\n    payload: IUserCondition\r\n\r\n}\r\nexport function setSearchUserConditionAction(condition: IUserCondition): setSearchUserConditionAction {\r\n    return {\r\n        type: \"set_user_condition\",\r\n        payload: condition\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type UserActions = setSearchUserConditionAction | deleteUserAction | setUserAction | setUserIsLoadingAction | fetchUserAction\r\n","import UserTable from '../../components/UserTable'\r\nimport { IUserState } from '../../store/reducers/userReducer'\r\nimport { connect } from 'react-redux'\r\nimport { IRootState } from '../../store/reducers/reducers'\r\nimport { Dispatch } from 'react'\r\nimport { UserActions, fetchUserAction, deleteUserAction, setSearchUserConditionAction } from '../../store/actions/userAction'\r\nimport { IUserCondition } from '../../services/UserService'\r\n\r\nconst mapStateToProps = (state: IRootState): IUserState => {\r\n    return { ...state.user }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch<UserActions>) => {\r\n    return {\r\n        onload() {\r\n            dispatch(fetchUserAction())\r\n\r\n        },\r\n        onDeleteUser(id: string) {\r\n            dispatch(deleteUserAction(id))\r\n            dispatch(fetchUserAction())\r\n\r\n\r\n        },\r\n        onPageChange(condition: IUserCondition) {\r\n            dispatch(setSearchUserConditionAction(condition))\r\n            dispatch(fetchUserAction())\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTable)\r\n","import React, { Component } from 'react'\r\nimport { UserService, IUser } from '../../services/UserService'\r\nimport UserForm from '../../components/UserForm'\r\n\r\ninterface IState {\r\n    user: IUser | undefined\r\n}\r\nexport default class EditUser extends Component<any, IState> {\r\n    state = {\r\n        user: undefined\r\n    }\r\n    async componentDidMount() {\r\n        const res = await UserService.findById(this.props.match.params.id)\r\n        this.setState({\r\n            user: res.data!\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <UserForm user={this.state.user} onChange={async (user) => {\r\n                    const res = await UserService.edit(this.props.match.params.id, user)\r\n                    return res.err\r\n\r\n\r\n                }} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Route, NavLink, withRouter, RouteComponentProps, Switch } from 'react-router-dom'\r\nimport Home from './Home'\r\nimport MovieList from './movie/MovieList'\r\nimport AddMovie from './movie/AddMovie'\r\nimport { Layout, Menu, Row, Col, } from 'antd';\r\nimport Type from './movie/Type'\r\nimport Area from './movie/Area'\r\nimport EditMovie from './movie/EditMovie'\r\nimport AddUser from './user/AddUser'\r\nimport UserList from './user/UserList'\r\nimport EditUser from './user/EditUser'\r\nconst { SubMenu } = Menu;\r\nconst { Header, Sider, Content } = Layout;\r\n\r\ninterface ILayoutProp extends RouteComponentProps {\r\n\r\n\r\n}\r\nfunction getAdmin() {\r\n\r\n    if (localStorage.getItem('admin')) {\r\n        const admin = JSON.parse(localStorage.getItem('admin')!)\r\n        return admin.username\r\n    }\r\n    return null\r\n}\r\nconst _Layout: React.FC<ILayoutProp> = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <div className=\"container\">\r\n            <Layout>\r\n                <Header className=\"header\">\r\n                    <Row>\r\n                        <Col span={12}>\r\n                            <NavLink to=\"/\"><h2>电影管理系统</h2></NavLink>\r\n                        </Col>\r\n                        <Col span={8} ></Col>\r\n                        <Col span={4} className=\"header-right\" >\r\n                            欢迎您{getAdmin()}\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                </Header>\r\n                <Layout>\r\n                    <Sider>\r\n                        <Menu\r\n                            defaultOpenKeys={[props.location.pathname]}\r\n                            mode=\"inline\"\r\n                            theme=\"dark\"\r\n                        >\r\n                            <SubMenu\r\n                                key=\"/movie\"\r\n                                title={\r\n                                    <span>\r\n                                        <span>电影管理</span>\r\n                                    </span>\r\n                                }\r\n                            >\r\n                                <Menu.Item key=\"/movie\"><NavLink to=\"/movie\">电影列表</NavLink></Menu.Item>\r\n                                <Menu.Item key=\"/movie/add\"><NavLink to=\"/movie/add\">添加电影</NavLink></Menu.Item>\r\n                                <Menu.Item key=\"/movie/type\"><NavLink to=\"/movie/type\">电影类型</NavLink></Menu.Item>\r\n                                <Menu.Item key=\"/movie/area\"><NavLink to=\"/movie/area\">电影地区</NavLink></Menu.Item>\r\n                            </SubMenu>\r\n                            <SubMenu\r\n                                key=\"/user\"\r\n                                title={\r\n                                    <span>\r\n                                        <span>用户管理</span>\r\n                                    </span>\r\n                                }\r\n                            >\r\n                                <Menu.Item key=\"/user\"><NavLink to=\"/user\">用户列表</NavLink></Menu.Item>\r\n                                <Menu.Item key=\"/user/add\"><NavLink to=\"/user/add\">添加用户</NavLink></Menu.Item>\r\n                                {/* <Menu.Item key=\"7\">添加用户</Menu.Item> */}\r\n                                {/* <Menu.Item key=\"8\">添加用户</Menu.Item> */}\r\n                            </SubMenu>\r\n                        </Menu>\r\n\r\n                    </Sider>\r\n                    <Content>\r\n                        <div className=\"main\">\r\n                            <Route path=\"/\" exact component={Home}></Route>\r\n                            <Route path=\"/movie\" exact component={MovieList}></Route>\r\n                            <Route path=\"/movie/add\" exact component={AddMovie}></Route>\r\n                            <Route path=\"/movie/type\" exact component={Type}></Route>\r\n                            <Route path=\"/movie/area\" exact component={Area}></Route>\r\n                            <Route path=\"/movie/edit/:id\" exact component={EditMovie}></Route>\r\n                            <Route path=\"/user\" exact component={UserList}></Route>\r\n                            <Route path=\"/user/add\" exact component={AddUser}></Route>\r\n                            <Route path=\"/user/edit/:id\" exact component={EditUser}></Route>\r\n                        </div>\r\n                    </Content>\r\n                </Layout>\r\n\r\n            </Layout>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default _Layout","import React, { Component, Dispatch } from 'react'\r\nimport { Form, Input, Button, Icon, message } from 'antd'\r\n\r\nimport { WrappedFormUtils } from 'antd/lib/form/Form';\r\nimport { connect } from 'react-redux';\r\nimport { IAdminState, IAdmin } from '../store/reducers/adminReducer';\r\nimport { IRootState } from '../store/reducers/reducers';\r\nimport { adminAction, adminActions, setLoginAdminAction } from '../store/actions/admin';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\n\r\ninterface ILoginProps extends RouteComponentProps {\r\n    form: WrappedFormUtils,\r\n    admin: IAdminState,\r\n    onLoad: () => void,\r\n    onLogin: (admin: IAdmin) => void\r\n\r\n}\r\nclass Login extends Component<ILoginProps>{\r\n\r\n    private handleSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n\r\n            if (!err) {\r\n                const data = this.props.admin.data.find(i => i.username === values.username)\r\n                if (data) {\r\n                    if (data.password === values.password) {\r\n                        this.props.onLogin(values)\r\n                        message.success(\"登陆成功\")\r\n                        localStorage.setItem(\"admin\", JSON.stringify(data))\r\n                        this.props.history.push(`${this.props.location.state}`)\r\n                    } else {\r\n                        message.warn(\"密码错误\")\r\n                    }\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.props.onLoad()\r\n        console.log(this.props.location.state)\r\n    }\r\n    render() {\r\n\r\n\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n            <div className=\"login-bg\">\r\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <Form.Item>\r\n                        {getFieldDecorator('username', {\r\n                            rules: [{ required: true, message: 'Please input your username!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                placeholder=\"Username\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('password', {\r\n                            rules: [{ required: true, message: 'Please input your Password!' }],\r\n                        })(\r\n                            <Input\r\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                            />,\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                            登陆 </Button>\r\n\r\n                    </Form.Item>\r\n\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state: IRootState) => {\r\n    return {\r\n        admin: state.admin,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch<adminActions>) => {\r\n    return {\r\n        onLoad() {\r\n            dispatch(adminAction())\r\n        },\r\n        onLogin(admin: IAdmin) {\r\n            dispatch(setLoginAdminAction(admin))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form.create<ILoginProps>({\r\n    mapPropsToFields(props) {\r\n        if (localStorage.getItem('admin')) {\r\n            const admin = JSON.parse(localStorage.getItem('admin')!)\r\n            if (admin) {\r\n                return {\r\n                    username: Form.createFormField({\r\n                        value: admin.username,\r\n                    }),\r\n                    password: Form.createFormField({\r\n                        value: admin.password,\r\n                    }),\r\n\r\n                };\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n})(Login))","import { IAdmin } from \"../reducers/adminReducer\"\r\n\r\nexport interface adminAction {\r\n    type: \"admin\"\r\n\r\n}\r\nexport function adminAction(): adminAction {\r\n    return {\r\n        type: \"admin\"\r\n    }\r\n}\r\nexport interface setLoginAdminAction {\r\n    type: \"set_login_admin\",\r\n    payload: IAdmin\r\n\r\n}\r\nexport function setLoginAdminAction(admin: IAdmin): setLoginAdminAction {\r\n    return {\r\n        type: \"set_login_admin\",\r\n        payload: admin\r\n    }\r\n}\r\n\r\nexport type adminActions = setLoginAdminAction | adminAction","import React, { Component } from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport default class PrivateRoute extends Component<any> {\r\n\r\n    render() {\r\n        const { component: Component, children, render, ...rest } = this.props\r\n        console.log(rest)\r\n        return <Route\r\n            {...rest}\r\n            render={values => {\r\n                console.log(values)\r\n\r\n                if (localStorage.getItem('admin')) {\r\n                    const admin = JSON.parse(localStorage.getItem('admin')!)\r\n                    if (admin) {\r\n                        return <Component {...values}></Component>\r\n                    }\r\n                } else {\r\n                    return (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: '/login',\r\n                                state: values.location.pathname\r\n                            }}\r\n                        />\r\n                    )\r\n\r\n                }\r\n            }}\r\n        />\r\n\r\n    }\r\n}\r\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport React from 'react'\r\nimport _Layout from './pages/Layout'\r\nimport Login from './pages/Login'\r\nimport PrivateRoute from './components/PrivateRoute'\r\n\r\nexport default function router() {\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/login\" component={Login}></Route>\r\n                    <PrivateRoute path=\"/\" component={_Layout}></PrivateRoute>\r\n                </Switch>\r\n            </Router>\r\n        </div >\r\n    )\r\n}\r\n","\r\nimport { IMovie } from \"../../services/MovieService\"\r\nimport { movieActions, setMovieAction, setLoadingAction, setConditionAction, deleteMovieAction, changeSwitchAction } from \"../actions/movieAction\"\r\nimport { Reducer } from \"react\";\r\n\r\nexport interface ISearchCondition {\r\n    key?: string,\r\n    page?: number,\r\n    limit?: number\r\n}\r\n\r\ntype IMovieCondition = Required<ISearchCondition>\r\n\r\nexport interface IMovieState {\r\n    data: IMovie[],\r\n    isLoading: boolean,\r\n    searchConditons: IMovieCondition,\r\n    total: number,\r\n    totalPage: number\r\n}\r\n\r\nconst defaultState: IMovieState = {\r\n    data: [],\r\n    isLoading: false,\r\n    searchConditons: {\r\n        key: \"\",\r\n        page: 1,\r\n        limit: 10\r\n    },\r\n    total: 0,\r\n    totalPage: 0\r\n}\r\n\r\nconst setMovie: Reducer<IMovieState, setMovieAction> = (state, action): IMovieState => {\r\n    const newState = {\r\n        ...state,\r\n        ...action.payload,\r\n\r\n    }\r\n    newState.totalPage = Math.ceil(newState.total / newState.searchConditons.limit)\r\n    return newState\r\n}\r\n\r\nconst setLoading: Reducer<IMovieState, setLoadingAction> = (state, action): IMovieState => {\r\n    return {\r\n        ...state,\r\n        isLoading: action.payload\r\n\r\n    }\r\n}\r\nconst setCondition: Reducer<IMovieState, setConditionAction> = (state, action): IMovieState => {\r\n    return {\r\n        ...state,\r\n        searchConditons: {\r\n            ...state.searchConditons,\r\n            ...action.payload\r\n        }\r\n\r\n    }\r\n}\r\nconst deleteMovie: Reducer<IMovieState, deleteMovieAction> = (state, action): IMovieState => {\r\n    return {\r\n        ...state,\r\n        total: state.total - 1,\r\n        data: state.data.filter(m => m._id !== action.payload),\r\n        totalPage: Math.ceil((state.total - 1) / state.searchConditons.limit)\r\n\r\n\r\n    }\r\n}\r\n\r\nconst changeSwitch: Reducer<IMovieState, changeSwitchAction> = (state, action): IMovieState => {\r\n    // 根据id查找对象\r\n    const movie = state.data.find(d => d._id === action.payload.id)\r\n    if (!movie) {\r\n        return state\r\n    }\r\n    //对象克隆\r\n    const _movie = { ...movie }\r\n    // console.log(_movie)\r\n\r\n    _movie[action.payload.type] = action.payload.newVal\r\n    // console.log(state.data)\r\n    //重新放入数组\r\n    // console.log(action.payload.id)\r\n    const newData = state.data.map(d => {\r\n        if (d._id === action.payload.id) {\r\n            // console.log(d._id)\r\n            // console.log(_movie)\r\n            return _movie\r\n        } else {\r\n            return d\r\n        }\r\n    })\r\n    // console.log(newData)\r\n\r\n\r\n    return {\r\n        ...state,\r\n        data: newData\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function movieReducer(state: IMovieState = defaultState, action: movieActions) {\r\n    switch (action.type) {\r\n        case \"set_movie\":\r\n            return setMovie(state, action)\r\n\r\n        case \"set_loading\":\r\n            return setLoading(state, action)\r\n\r\n        case \"set_condition\":\r\n            return setCondition(state, action)\r\n\r\n        case \"delete_movie\":\r\n            return deleteMovie(state, action)\r\n\r\n        case \"movie_switch\":\r\n            return changeSwitch(state, action)\r\n        default:\r\n            return state\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { IMovieType } from \"../../services/MovieTypeService\";\r\nimport { movieTypeActions, setMovieTypeAction, deleteMovieTypeAction, changeMovieTypeAction, editMovieTypeAction } from \"../actions/movieTypeAction\";\r\nimport { Reducer } from \"react\";\r\n\r\nexport interface IMovieTypeState {\r\n    data: IMovieType[],\r\n    total: number,\r\n}\r\nconst defaultState: IMovieTypeState = {\r\n    data: [],\r\n    total: 0,\r\n}\r\n\r\nconst setMovieType: Reducer<IMovieTypeState, setMovieTypeAction> = (state, action): IMovieTypeState => {\r\n    return {\r\n        ...state,\r\n        ...action.payload\r\n    }\r\n}\r\nconst deleteMovieType: Reducer<IMovieTypeState, deleteMovieTypeAction> = (state, action): IMovieTypeState => {\r\n    const newState = state.data.filter(i => i._id !== action.payload)\r\n    return {\r\n        data: newState,\r\n        total: state.total - 1\r\n    }\r\n\r\n}\r\n\r\nconst changeMovieType: Reducer<IMovieTypeState, changeMovieTypeAction> = (state, action): IMovieTypeState => {\r\n    const types = state.data.find(i => i._id === action.payload._id)\r\n    if (!types) {\r\n        return state\r\n    }\r\n    let _types: any = { ...types }\r\n    _types.isShow = action.payload.isShow\r\n\r\n    // console.log(_types)\r\n    const newDatas = state.data.map(a => {\r\n        if (a._id === action.payload._id) {\r\n\r\n            return _types\r\n        } else {\r\n            return a\r\n        }\r\n    })\r\n    // console.log(newDatas)\r\n    return {\r\n        total: state.total,\r\n        data: newDatas\r\n\r\n    }\r\n\r\n}\r\nconst editMovieType: Reducer<IMovieTypeState, editMovieTypeAction> = (state, action): IMovieTypeState => {\r\n    const types = state.data.find(i => i._id === action.payload._id)\r\n    if (!types) {\r\n        return state\r\n    }\r\n    const _types: any = { ...types }\r\n    _types.types = action.payload.types;\r\n    const newDatas = state.data.map(a => {\r\n        if (a._id === action.payload._id) {\r\n\r\n            return _types\r\n        } else {\r\n            return a\r\n        }\r\n    })\r\n    // console.log(newDatas)\r\n    return {\r\n        total: state.total,\r\n        data: newDatas\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function movieTypeReducer(state: IMovieTypeState = defaultState, action: movieTypeActions) {\r\n    switch (action.type) {\r\n        case \"set_movie_type\":\r\n            return setMovieType(state, action);\r\n        case \"delete_movie_type\":\r\n            return deleteMovieType(state, action);\r\n        case \"change_movie_type\":\r\n            return changeMovieType(state, action);\r\n        case \"edit_movie_type\":\r\n            return editMovieType(state, action)\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}","\r\nimport { Reducer } from \"react\";\r\nimport { IMovieArea } from \"../../services/MovieAreaService\";\r\nimport { deleteMovieAreaAction, setMovieAreaAction, movieAreaActions, editMovieAreaAction, changeMovieAreaAction } from \"../actions/movieAreaAction\";\r\n\r\nexport interface IMovieAreaState {\r\n    data: IMovieArea[],\r\n    total: number,\r\n\r\n}\r\nconst defaultState: IMovieAreaState = {\r\n    data: [],\r\n    total: 0,\r\n\r\n}\r\n\r\nconst setMovieArea: Reducer<IMovieAreaState, setMovieAreaAction> = (state, action): IMovieAreaState => {\r\n    return {\r\n        ...state,\r\n        ...action.payload\r\n    }\r\n}\r\nconst deleteMovieArea: Reducer<IMovieAreaState, deleteMovieAreaAction> = (state, action): IMovieAreaState => {\r\n    const newState = state.data.filter(i => i._id !== action.payload)\r\n    return {\r\n        ...state,\r\n        data: newState,\r\n        total: state.total - 1\r\n    }\r\n\r\n}\r\nconst changeMovieArea: Reducer<IMovieAreaState, changeMovieAreaAction> = (state, action): IMovieAreaState => {\r\n    const area = state.data.find(i => i._id === action.payload._id)\r\n    if (!area) {\r\n        return state\r\n    }\r\n    let _area: any = { ...area }\r\n    _area.isShow = action.payload.isShow\r\n\r\n    // console.log(_area)\r\n    const newDatas = state.data.map(a => {\r\n        if (a._id === action.payload._id) {\r\n\r\n            return _area\r\n        } else {\r\n            return a\r\n        }\r\n    })\r\n    // console.log(newDatas)\r\n    return {\r\n        total: state.total,\r\n        data: newDatas\r\n\r\n    }\r\n\r\n}\r\nconst editMovieArea: Reducer<IMovieAreaState, editMovieAreaAction> = (state, action): IMovieAreaState => {\r\n    const area = state.data.find(i => i._id === action.payload._id)\r\n    if (!area) {\r\n        return state\r\n    }\r\n    const _area: any = { ...area }\r\n    _area.area = action.payload.area;\r\n    const newDatas = state.data.map(a => {\r\n        if (a._id === action.payload._id) {\r\n\r\n            return _area\r\n        } else {\r\n            return a\r\n        }\r\n    })\r\n    // console.log(newDatas)\r\n    return {\r\n        total: state.total,\r\n        data: newDatas\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function movieAreaReducer(state: IMovieAreaState = defaultState, action: movieAreaActions) {\r\n    switch (action.type) {\r\n        case \"set_movie_area\":\r\n            return setMovieArea(state, action);\r\n        case \"delete_movie_area\":\r\n            return deleteMovieArea(state, action);\r\n        case \"edit_movie_area\":\r\n            return editMovieArea(state, action);\r\n        case \"change_movie_area\":\r\n            return changeMovieArea(state, action);\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}","import { IUser, IUserCondition } from \"../../services/UserService\";\r\nimport { UserActions, setUserAction, setSearchUserConditionAction, deleteUserAction, setUserIsLoadingAction } from \"../actions/userAction\";\r\n\r\nexport interface IUserState {\r\n    data: IUser[],\r\n    total: number,\r\n    condition: IUserCondition,\r\n    isLoading: boolean,\r\n    totalPage: number\r\n}\r\n\r\nconst defaultState = {\r\n    data: [],\r\n    total: 0,\r\n    condition: {\r\n        key: \"\",\r\n        limit: 10,\r\n        page: 1\r\n    },\r\n    isLoading: false,\r\n    totalPage: 0\r\n}\r\nfunction setUser(state: IUserState, action: setUserAction): IUserState {\r\n    const newState: IUserState = {\r\n        ...state,\r\n        ...action.payload,\r\n\r\n    }\r\n    newState.totalPage = Math.ceil(newState.total / newState.condition.limit!)\r\n    return newState\r\n\r\n}\r\nfunction setIsLoading(state: IUserState, action: setUserIsLoadingAction): IUserState {\r\n    return {\r\n        ...state,\r\n        isLoading: action.payload\r\n    }\r\n\r\n}\r\n\r\nfunction setCondition(state: IUserState, action: setSearchUserConditionAction): IUserState {\r\n    return {\r\n        ...state,\r\n        condition: action.payload\r\n    }\r\n\r\n}\r\nfunction deleteUser(state: IUserState, action: deleteUserAction) {\r\n    const res = state.data.filter(it => it._id !== action.payload)\r\n    return {\r\n        ...state,\r\n        data: res,\r\n        total: state.total - 1,\r\n        totalPage: Math.ceil((state.total - 1) / state.condition.limit!)\r\n    }\r\n}\r\n\r\nexport function userReducer(state: IUserState = defaultState, action: UserActions) {\r\n    switch (action.type) {\r\n        case \"set_user\":\r\n            return setUser(state, action);\r\n        case \"set_user_condition\":\r\n            return setCondition(state, action);\r\n        case \"delete_user\":\r\n            return deleteUser(state, action);\r\n        case \"set_user_isloading\":\r\n            return setIsLoading(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport { adminActions } from \"../actions/admin\";\r\n\r\nexport interface IAdmin {\r\n    username: string,\r\n    password: string\r\n}\r\nexport interface IAdminState {\r\n    data: IAdmin[],\r\n    loginAdmin: object\r\n\r\n}\r\nconst defaultState = {\r\n    data: [{\r\n        username: \"admin\",\r\n        password: \"123456\"\r\n    }],\r\n    loginAdmin: {}\r\n\r\n}\r\n\r\n\r\nexport function adminReducer(state: IAdminState = defaultState, action: adminActions) {\r\n    switch (action.type) {\r\n        case \"admin\":\r\n            return state;\r\n        case \"set_login_admin\":\r\n            return { ...state, loginAdmin: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { combineReducers } from 'redux'\r\nimport { movieReducer, IMovieState } from './movieReducer'\r\nimport { movieTypeReducer, IMovieTypeState } from './movieTypeReducer'\r\nimport { movieAreaReducer, IMovieAreaState } from './movieAreaReducer'\r\nimport { IUserState, userReducer } from './userReducer'\r\nimport { adminReducer, IAdminState } from './adminReducer'\r\n\r\nexport interface IRootState {\r\n    movie: IMovieState,\r\n    type: IMovieTypeState,\r\n    area: IMovieAreaState,\r\n    user: IUserState,\r\n    admin: IAdminState\r\n}\r\nexport const reducers = combineReducers({\r\n    movie: movieReducer,\r\n    type: movieTypeReducer,\r\n    area: movieAreaReducer,\r\n    user: userReducer,\r\n    admin: adminReducer\r\n})","import { call, put, select, } from 'redux-saga/effects'\r\nimport { setLoadingAction, setMovieAction, deleteMovieAction, changeSwitchAction } from '../actions/movieAction';\r\nimport { MovieService } from '../../services/MovieService';\r\n\r\n\r\nexport function* asyncFetchMovie() {\r\n    try {\r\n        yield put(setLoadingAction(true));\r\n        const condition = yield select(state => state.movie.searchConditons)\r\n\r\n        const res = yield call(MovieService.findByCondition, condition);\r\n        yield put(setMovieAction(res.data, res.total))\r\n\r\n        yield put(setLoadingAction(false));\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport function* asyncDeleteMovie(action: deleteMovieAction) {\r\n    try {\r\n        yield call(MovieService.delete, action.payload)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport function* asyncEditSwitch(action: changeSwitchAction) {\r\n\r\n    try {\r\n        yield call(MovieService.edit, action.payload.id, {\r\n            [action.payload.type]: action.payload.newVal\r\n        })\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}","import { MovieTypeService } from \"../../services/MovieTypeService\";\r\nimport { call, put } from \"redux-saga/effects\";\r\nimport { setMovieTypeAction, deleteMovieTypeAction, changeMovieTypeAction, editMovieTypeAction } from \"../actions/movieTypeAction\";\r\n\r\nexport function* asyncFetchType() {\r\n    try {\r\n        const res = yield call(MovieTypeService.find);\r\n        yield put(setMovieTypeAction(res.total, res.data))\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\nexport function* asyncDeleteType(actions: deleteMovieTypeAction) {\r\n    try {\r\n        yield call(MovieTypeService.delete, actions.payload);\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport function* asyncChangeType(actions: changeMovieTypeAction) {\r\n    try {\r\n        yield call(MovieTypeService.edit, actions.payload._id, {\r\n            isShow: actions.payload.isShow\r\n        });\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport function* asyncEditType(actions: editMovieTypeAction) {\r\n    try {\r\n        yield call(MovieTypeService.edit, actions.payload._id, {\r\n            types: actions.payload.types\r\n        });\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}","\r\nimport { call, put } from \"redux-saga/effects\";\r\nimport { setMovieAreaAction, deleteMovieAreaAction, changeMovieAreaAction, editMovieAreaAction } from \"../actions/movieAreaAction\";\r\nimport { MovieAreaService } from \"../../services/MovieAreaService\";\r\n\r\n\r\nexport function* asyncFetchArea() {\r\n    try {\r\n        const res = yield call(MovieAreaService.find);\r\n        yield put(setMovieAreaAction(res.total, res.data))\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\nexport function* asyncDeleteArea(actions: deleteMovieAreaAction) {\r\n    try {\r\n        yield call(MovieAreaService.delete, actions.payload);\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport function* asyncChangeArea(actions: changeMovieAreaAction) {\r\n    try {\r\n        yield call(MovieAreaService.edit, actions.payload._id, {\r\n            isShow: actions.payload.isShow\r\n        });\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport function* asyncEditArea(actions: editMovieAreaAction) {\r\n    try {\r\n        yield call(MovieAreaService.edit, actions.payload._id, {\r\n            area: actions.payload.area\r\n        });\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}","import { setUserIsLoadingAction, setUserAction, deleteUserAction } from \"../actions/userAction\";\r\nimport { put, select, call } from \"redux-saga/effects\";\r\nimport { UserService } from \"../../services/UserService\";\r\n\r\nexport function* asyncFetchUser() {\r\n    try {\r\n        yield put(setUserIsLoadingAction(true));\r\n        const condition = yield select(state => state.user.condition)\r\n        const res = yield call(UserService.find, condition);\r\n        yield put(setUserAction(res.data, res.total))\r\n        yield put(setUserIsLoadingAction(false));\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport function* asyncDeleteUser(action: deleteUserAction) {\r\n    try {\r\n        yield call(UserService.delete, action.payload)\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}","import { takeEvery } from \"redux-saga/effects\";\r\nimport { asyncFetchMovie, asyncDeleteMovie, asyncEditSwitch } from \"./movie\";\r\nimport { asyncDeleteType, asyncFetchType, asyncChangeType } from \"./type\";\r\nimport { asyncDeleteArea, asyncFetchArea, asyncChangeArea } from \"./area\";\r\nimport { asyncFetchUser, asyncDeleteUser } from \"./user\";\r\n\r\n\r\nexport function* mySaga() {\r\n    yield takeEvery(\"fetch_movie\", asyncFetchMovie)\r\n    yield takeEvery(\"fetch_movie_type\", asyncFetchType)\r\n    yield takeEvery(\"fetch_movie_area\", asyncFetchArea)\r\n    yield takeEvery(\"movie_switch\", asyncEditSwitch)\r\n    yield takeEvery(\"delete_movie\", asyncDeleteMovie)\r\n    yield takeEvery(\"delete_movie_type\", asyncDeleteType)\r\n    yield takeEvery(\"delete_movie_area\", asyncDeleteArea)\r\n    yield takeEvery(\"change_movie_area\", asyncChangeArea)\r\n    yield takeEvery(\"change_movie_type\", asyncChangeType)\r\n    yield takeEvery(\"change_movie_type\", asyncChangeType)\r\n    yield takeEvery(\"fetch_user\", asyncFetchUser)\r\n    yield takeEvery(\"delete_user\", asyncDeleteUser)\r\n\r\n}\r\n\r\n","import { createStore, applyMiddleware } from \"redux\"\r\nimport { reducers } from \"./reducers/reducers\"\r\nimport logger from 'redux-logger'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { mySaga } from \"./saga\"\r\nconst sagaMiddleWare = createSagaMiddleware()\r\nexport const store = createStore(reducers, applyMiddleware(sagaMiddleWare, logger))\r\n\r\nsagaMiddleWare.run(mySaga)","import React from 'react';\nimport 'react-router-dom'\nimport Router from './router';\nimport { Provider } from 'react-redux'\nimport { store } from './store/index'\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Router></Router>\n      </div>\n    </Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css'\nimport { MovieTypeService } from './services/MovieTypeService';\nimport { UserService } from './services/UserService';\n\n\n\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n/* UserService.add({\n  username: \"sdd45669356d\",\n  password: \"gggggsdd\",\n  name: \"gggsddg\",\n  phone: 18888888555\n})\nUserService.add({\n  username: \"sdd4896856d\",\n  password: \"gggggsdd\",\n  name: \"gggsddg\",\n  phone: 18888888555\n}) */\n/* UserService.edit(\"5e7dcea763f56f2f0063e9d8\", {\n  username: \"sddd3333\",\n  password: \"gggggsdd\",\n  name: \"gggg\",\n  phone: 18888888555\n}) */\n// UserService.findById(\"5e7daccdf024ef4b3c1077fd\").then(res => console.log(res))"],"sourceRoot":""}